reactJS

1. js library which having the reusable UI components
2. open source to develop the webpages. developed by facebook
3. mvc architecture react stands for view part alone
4. virtual DOM which boosts up the performance of react application
5. it supports one way binding
6. it supports jsx format
7. it is a single page application

react components are the heart of react application

1. function components:

export a components
 a. default export only one per file
 b. namespace export

importing a component in app.js
 a. default component
    import anyName from filePath
 b. namespace export
    import {sameName} from filePath


2. class components:

import {component} from 'react';
class ClassName extends components
{
   render()
   {
      return(
         <div>
            html content goes here...
         </div>
      )
   }
}

State and Props

props -> 
immutable
used to transfer data from parent compo to child compo

state->
mutable(can be changed)
internal storgae of a component

to change the state or you want to change the input field ull use setState in handle change or click

one way binding-> view to component and component to view.

lifecycle methods of class component:
                                                            (mount-update on site)
1. initial phase: define the value of state amd props

2. mounting phase: 
      a. constructor() -> used to construct a class component
      b. getDerivedStateFromProps() -> used to get the value of state and props
      c. render() -> used to render the webpages
      d. componentDidMount() -> used to work with side effect[i.e: http request]
   
3. updating phase:
      a. getDerivedStateFromProps() -> used to get the value of state and props
      b. shouldComponentUpdate() -> used to declare whether component should update or not
      c. render() -> used to render the updated webpages
      d. getSnapshotBeforeUpdate() -> used to store the previous state and props value
      e. componentDidUpdate -> used to work with side effect

4. Unmounting phase:
      a. componentWillUnmount() -> when the component is being removed



React Styling:
   1. inline -> {{}}
   2. internal -> {object}
   3. external -> import "filepath";


install a third party module using npm command: npm install applicationName@version

npm i bootstrap@5

npm i react-router-dom

npm install axios

HTTP request [CRUD Operations]
1. post-create
2. get-read
3. put-update
4. delete-delete

Axios.post(url,{newObj})
Axios.get(url)
Axios.put(url+id,{updObj})
Axios.delete(url+id)

axios will return back a promise